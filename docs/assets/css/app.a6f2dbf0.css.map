{"version":3,"sources":["webpack:///src/src/App.vue","app.a6f2dbf0.css","webpack:///src/views/src/views/Rhymesaurus.vue","webpack:///src/views/src/views/AdjForNoun.vue"],"names":[],"mappings":"AAcA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eCZA,CCkEA,8BACA,gBD9DA,CCiEA,kCACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAA,CACA,0BAAA,CACA,aD/DA,CCiEA,wBACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,gBD/DA,CCiEA,wCACA,eD/DA,CCkEA,4BACA,oBAAA,CACA,SDhEA,CCmEA,6BACA,oBAAA,CACA,WAAA,CACA,qBAAA,CACA,aAAA,CACA,WAAA,CACA,gBAAA,CACA,UAAA,CACA,yBDjEA,CCmEA,2BACA,oBDjEA,CCmEA,4BACA,oBAAA,CACA,SAAA,CACA,aAAA,CACA,aDjEA,CCoEA,mBACA,aDlEA,CEaA,6BACA,gBFTA,CEYA,kCACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAA,CACA,0BAAA,CACA,aFVA,CEYA,wBACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,gBFVA,CEYA,wCACA,eFVA,CEaA,4BACA,oBAAA,CACA,SFXA,CEcA,6BACA,oBAAA,CACA,WAAA,CACA,qBAAA,CACA,aAAA,CACA,WAAA,CACA,gBAAA,CACA,UAAA,CACA,yBFZA,CEcA,2BACA,oBFZA,CEcA,4BACA,oBAAA,CACA,SAAA,CACA,aAAA,CACA,aFZA,CEeA,mBACA,aFbA","file":"app.a6f2dbf0.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Fun With Datamuse</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n\n.rhymesaurus[data-v-d0bc2618] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-d0bc2618]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-d0bc2618]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-d0bc2618], h2[data-v-d0bc2618] {\n  font-weight: normal;\n}\nul.results[data-v-d0bc2618] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-d0bc2618] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors[data-v-d0bc2618] {\n  list-style-type: none;\n}\n.errors li[data-v-d0bc2618] {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\na[data-v-d0bc2618] {\n  color: #42b983;\n}\n\n\n.adjfornoun[data-v-59d1366d] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-59d1366d]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-59d1366d]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-59d1366d], h2[data-v-59d1366d] {\n  font-weight: normal;\n}\nul.results[data-v-59d1366d] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-59d1366d] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors[data-v-59d1366d] {\n  list-style-type: none;\n}\n.errors li[data-v-59d1366d] {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\na[data-v-59d1366d] {\n  color: #42b983;\n}\n\n\n/*# sourceMappingURL=app.a6f2dbf0.css.map*/","<template>\n  <div class=\"rhymesaurus\">\n    <h2>Rhymesaurus: The Rhyming Thesaurus</h2>\n    <p>\n      <router-link to=\"/adjfornoun\">Adjective For Noun</router-link>\n    </p>\n    <!-- Used a submit event handler to allow the findWords method to handle this form submission. -->\n    <form v-on:submit.prevent=\"findWords\">\n      <p>Find rhymes for <input type=\"text\" v-model=\"rhyme\"> related to <input type=\"text\" v-model=\"phrase\"> <button type=\"submit\">Search</button></p>\n    </form>\n    <!-- Added a v-if conditional to make this results list show only if there are results and if the length is greater than 0. -->\n    <ul class=\"results\" v-if=\"results && results.length > 0\">\n      <!-- Added a v-for loop to the LI tag to loop through the items in the results. -->\n      <li class=\"item\" v-for=\"(item,index) of results\" :key=\"index\">\n        <!-- Output word --> \n        <p><strong> {{item.word}}</strong></p>\n        <!-- Output score -->\n        <p>{{item.score}}</p>\n      </li>\n    </ul>\n\n    <!-- Added a `v-else-if` conditional to make this message only show if there are no results returned (but we have actually attempted a request). -->\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n    <!-- Added a v-if conditional to make this errors list show only if there are errors and if the length is greater than 0. -->\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <!-- Added a v-for loop to the LI tag to loop through the errors. -->\n      <li v-for=\"(error, index) of errors\" :key=\"index\">\n        <!-- Output each error. -->\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// Imported axios\nimport axios from 'axios';\n\nexport default {\n  name: 'Rhymesaurus',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      phrase: '',\n      rhyme: ''\n    }\n  },\n    // Created the findWords method\n    methods: {\n      findWords: function(){\n      axios.get('https://api.datamuse.com/words', {\n        params: {\n          ml: this.phrase,\n          rel_rhy:this.rhyme\n        }\n      })\n      .then(response =>{\n        this.results = response.data\n      })\n      .catch(error =>{\n        this.errors.push(error)\n      })\n    }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.rhymesaurus {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\n\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <div class=\"adjfornoun\">\n      <h2>Adjective-for-a-Noun-saurus</h2>\n       <p>\n      <router-link to=\"/\">Home: Rhymesaurus</router-link>\n    </p>\n    <!-- Used a submit event handler to allow the findWords method to handle this form submission. -->\n    <form v-on:submit.prevent=\"findWords\">\n      <p>Find an adjective for a given noun. Enter noun here: \n        <input type=\"text\" v-model=\"noun\">\n        <button type=\"submit\">Search</button>\n      </p>\n    </form>\n    <!-- Added a v-if conditional to make this results list show only if there are results and if the length is greater than 0. -->\n    <ul class=\"results\" v-if=\"results && results.length > 0\">\n      <!-- Added a v-for loop to the LI tag to loop through the items in the results. -->\n      <li class=\"item\" v-for=\"(item,index) of results\" :key=\"index\">\n        <!-- Output word --> \n        <p><strong> {{item.word}}</strong></p>\n        <!-- Output score -->\n        <p>{{item.score}}</p>\n      </li>\n    </ul>\n\n    <!-- Added a `v-else-if` conditional to make this message only show if there are no results returned (but we have actually attempted a request). -->\n    <div class=\"no-results\" v-else-if=\"results && results.length === 0\">\n      <h2>No Words Found</h2>\n      <p>Please adjust your search to find more words.</p>\n    </div>\n\n    <!-- Added a v-if conditional to make this errors list show only if there are errors and if the length is greater than 0. -->\n    <ul class=\"errors\" v-if=\"errors && errors.length > 0\">\n      <!-- Added a v-for loop to the LI tag to loop through the errors. -->\n      <li v-for=\"(error, index) of errors\" :key=\"index\">\n        <!-- Output each error. -->\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n// Imported axios\nimport axios from 'axios';\n\nexport default {\n  name: 'AdjForNoun',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      noun: ''\n    }\n  },\n    // Created the findWords method\n    methods: {\n      findWords: function(){\n      axios.get('https://api.datamuse.com/words', {\n        params: {\n          rel_jjb:this.noun\n        }\n      })\n      .then(response =>{\n        this.results = response.data\n      })\n      .catch(error =>{\n        this.errors.push(error)\n      })\n    }\n    }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.adjfornoun {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"]}